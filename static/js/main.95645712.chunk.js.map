{"version":3,"sources":["components/Input.js","components/InputCam.js","components/Form.js","App.js","index.js"],"names":["Input","name","label","type","onInputChange","className","htmlFor","id","onChange","e","target","statusMessages","InputCam","onCameraRecord","getStatus","status","videoBlob","window","console","log","recordingLength","INIT","PREVIEW","ERROR","options","render","props","disabled","isWebcamOn","isPreview","onClick","openCamera","closeCamera","retake","isRecording","start","stop","download","Form","useState","firstName","lastName","age","file1","file2","video","inputs","setInputs","value","files","file","newInputData","onSubmit","preventDefault","formData","FormData","key","hasOwnProperty","inputProps","append","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95645712.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Input.css'\r\n\r\nexport const Input = ({ name, label, type='input', onInputChange }) => {\r\n    // const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        // const { value, name } = e.target\r\n        const target = e.target\r\n        // setInputValue(value)\r\n        onInputChange(target)\r\n    }\r\n\r\n    return (\r\n        <div className='inputContainer'>\r\n            <label className='bold' htmlFor={name}> {label} </label>\r\n            <input type={type} name={name} id={name} onChange={handleInputChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Webcam from 'react-record-webcam'\r\nimport './InputCam.css'\r\n\r\nconst statusMessages = {\r\n  INIT: \"Starting camera ...\",\r\n  PREVIEW: \"Preview\",\r\n  ERROR: \"Error occured while opening camera\"\r\n}\r\n\r\nexport const InputCam = ({ name, label, onCameraRecord }) => {\r\n\r\n    const handleStatus = (status) => {\r\n        if(status === statusMessages.PREVIEW){\r\n\t\t\tconst videoBlob = window.videoBlob\r\n\t\t\tconsole.log('window.videoBlob', videoBlob);\r\n\t\t\tonCameraRecord(videoBlob)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='inputContainer InputCam'>\r\n            <label className='bold'> {label} </label>\r\n \r\n            <Webcam\r\n                getStatus={handleStatus}\r\n                recordingLength={10}\r\n                statusMessages={{\r\n                    INIT: statusMessages.INIT,\r\n                    PREVIEW: statusMessages.PREVIEW,\r\n                    ERROR: statusMessages.ERROR,\r\n                    // CLOSED: \"Camera is closed ❌\",\r\n                    // OPEN: \"Camera is open 🎥\",\r\n                    // RECORDING: \"Recording ... ⏺\",\r\n                }}\r\n\r\n                options={{\r\n                    type: 'video'\r\n                }}\r\n\r\n                render={(props) => {\r\n\r\n                    return (\r\n                      <div className=\"webcam__render-wrapper\">\r\n                        <h1 className=\"webcam__render-status\">{props.status}</h1>\r\n                        <div className=\"webcam__render-action-wrapper\">\r\n                          <button\r\n                            className=\"webcam__render-action-button\"\r\n                            disabled={props.isWebcamOn || props.isPreview}\r\n\t\t\t\t\t\t\tonClick={props.openCamera}\r\n\t\t\t\t\t\t\ttype='button'\r\n                          >\r\n                            Open camera\r\n                          </button>\r\n                          <button\r\n                            className=\"webcam__render-action-button\"\r\n                            disabled={!props.isWebcamOn}\r\n                            onClick={props.closeCamera}\r\n                          >\r\n                            Close camera\r\n                          </button>\r\n                          <button\r\n                            className=\"webcam__render-action-button\"\r\n                            disabled={!props.isPreview}\r\n                            onClick={props.retake}\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t>\r\n                            Retake\r\n                          </button>\r\n                          <button\r\n                            className=\"webcam__render-action-button\"\r\n                            disabled={\r\n                              !props.isWebcamOn || props.isRecording || props.isPreview\r\n                            }\r\n                            onClick={props.start}\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t>\r\n                            Start recording\r\n                          </button>\r\n                          <button\r\n                            className=\"webcam__render-action-button\"\r\n                            disabled={!props.isRecording}\r\n\t\t\t\t\t\t\tonClick={props.stop}\r\n\t\t\t\t\t\t\ttype='button'\r\n                          >\r\n                            Stop recording\r\n                          </button>\r\n                          <button\r\n                            className=\"webcam__render-action-button\"\r\n                            disabled={!props.isPreview}\r\n                            onClick={(()=>{ \r\n                              return props.download\r\n\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\r\n                          >\r\n                            Download\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Input } from './Input'\r\nimport { InputCam } from './InputCam'\r\nimport './Form.css'\r\n\r\nconst mbSize = 1048576\r\nconst readFile = (name, file) => {\r\n    // Check if the file is an image.\r\n    if (file.type && file.type.indexOf('image') === -1) {\r\n      console.log('File is not an image.', file.type, file);\r\n    }\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.append(name, file)\r\n}\r\n\r\nexport const Form = () => {\r\n    const [inputs, setInputs] = useState({\r\n        firstName: {},\r\n        lastName: {},\r\n        age: {},\r\n        file1: {},\r\n        file2: {},\r\n        video: {},\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n\r\n        for (const key in inputs) {\r\n            if (inputs.hasOwnProperty(key)) {\r\n                const inputProps = inputs[key];\r\n                console.log(key, inputProps);\r\n\r\n                if(inputProps.value){\r\n                    formData.append(key, inputProps.value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onInputChange = (target) => {\r\n        const { value, name, files } = target\r\n        const file = files ? files[0] : null\r\n        const newInputData = {\r\n            type: file ? 'file' : 'text',\r\n            value: file || value\r\n        }\r\n        setInputs({ ...inputs, [name]: newInputData })\r\n    }\r\n\r\n    const onCameraRecord = (videoBlob) => {\r\n        const newInputData = {\r\n            type: 'file',\r\n            value: videoBlob\r\n        }\r\n        setInputs({ ...inputs, video: newInputData })\r\n    }\r\n\r\n    return (\r\n        <div className='formContainer'>\r\n            <form onSubmit={ handleSubmit }>\r\n                <Input name='firstName' label='first name' onInputChange={onInputChange} />\r\n                <Input name='lastName' label='last name' onInputChange={onInputChange}/>\r\n                <Input name='age' label='age' type='number' onInputChange={onInputChange} />\r\n                <Input type='file' name='file1' label='file1' onInputChange={onInputChange} />\r\n                <Input type='file' name='file2' label='file2' onInputChange={onInputChange} />\r\n                <div className=\"videoInput\">\r\n                    <InputCam name='video' label='camera' onCameraRecord={onCameraRecord} />\r\n                    <span className='videoOr'> OR </span> \r\n                    <Input type='file' name='video' label='video' onInputChange={onInputChange} />\r\n                </div>\r\n                <button className='submitBtn' type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport { Form } from './components/Form';\n\nfunction App() {\n  return (\n    <main>\n      <Form></Form>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}